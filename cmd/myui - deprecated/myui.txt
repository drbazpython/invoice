//Package myui ... deprecated
//package myui

// import (
// 	//"log"
// 	"fmt"
// 	"strings"
// 	"github.com/charmbracelet/log"
// 	 tea"github.com/charmbracelet/bubbletea"
// 	"github.com/charmbracelet/lipgloss"
// 	"github.com/charmbracelet/bubbles/textinput"
// )

// //Styles ...
// type Styles struct {
// 	BorderColor lipgloss.Color
// 	InputField lipgloss.Style

// }
// //DefaultStyles ...
// func DefaultStyles() *Styles {
// 	s := new(Styles)
// 	s.BorderColor = lipgloss.Color("36")
// 	s.InputField = lipgloss.NewStyle().BorderForeground(s.BorderColor).BorderStyle(lipgloss.NormalBorder()).Padding(1).Width(80)
// 	return s
// }
// //Invoice ...
// type Invoice struct {
// 	Name string
// 	InvoiceNumber string
// 	TotalHours string
// 	StartDate string
// 	EndDate string
// }

// type (
// 	errMsg error
// )

// type model struct {
// 	questions []Question
// 	Name string
// 	InvoiceNumber string
// 	TotalHours int
// 	StartDate string
// 	EndDate string
// 	answerField textinput.Model
// 	styles *Styles
// 	width int
// 	height int
// 	index int
// 	err error
// }
// //Question ...
//  type Question struct {
// 	question string
// 	answer string
// }
// //ValidateFunc ...
// //type ValidateFunc func(s string) string 

// func isValidName(s string) error {
// 	// fmt.Println(s)
// 	if strings.Contains(s,"xxx"){
// 		return fmt.Errorf("name is invlid")
// 	}

// 	return nil
	

// }

// //New ... construtor for model
// func New(questions []Question) *model{
// 	styles := DefaultStyles()
// 	answerField := textinput.New()
// 	answerField.Placeholder = "Your answer here"
// 	answerField.Focus()
// 	//answerField.Validate = isValidName
// 	return &model{
// 		questions: questions, 
// 		answerField: answerField, 
// 		styles: styles}

// }


// //NewQuestion ...
// func NewQuestion(question string) Question{
// 	return Question{question: question}
// }
// func (m model) Init() tea.Cmd {
// 	return nil
// }

// func (m model) Update(msg tea.Msg) (tea.Model,tea.Cmd){
// 	var cmd tea.Cmd
// 	current := &m.questions[m.index]
// 	switch msg := msg.(type){
// 	case tea.WindowSizeMsg:
// 		m.width = msg.Width
// 		m.height = msg.Height
// 	case errMsg:
// 		m.err = msg
// 		m.answerField.SetValue(msg.Error()) 
// 		return m, nil
// 	case tea.KeyMsg:
// 		//switch msg.String(){
// 		switch msg.Type {
// 		//case "ctrl+c","q":
// 		case tea.KeyCtrlC:
// 				return m, tea.Quit		
// 		case tea.KeyEnter:
// 			current.answer =  m.answerField.Value()
// 			m.answerField.Validate = isValidName
// 			m.answerField.SetValue("") 
// 			m.Next()	
// 			return m, nil
// 		}

		
		
		
// 	}
// 	m.answerField, cmd = m.answerField.Update(msg)
// 	return m, cmd
// }
// func (m model ) View() string {
// 	if m.width == 0 {
// 		return "loading ..."
// 	}
// 	return lipgloss.Place(
// 		m.width,
// 		m.height,
// 		lipgloss.Center,
// 		lipgloss.Center,
// 	lipgloss.JoinVertical(
// 		lipgloss.Left,
// 		m.questions[m.index].question,
// 		m.styles.InputField.Render(m.answerField.View()),
// 	),
// )
// }
// //Next ...
// func (m *model) Next() {
// 	if m.index < len(m.questions)-1 {
// 		  m.index++
// 	} else {
// 		m.index = 0
// 	}
// }

// //GetData ...
// func GetData() Invoice{
// 	questions := []Question{
// 		NewQuestion("What is your name?"),
// 		NewQuestion("What is the invoice number?"),
// 		NewQuestion("How many hours did you work?"),
// 		NewQuestion("Invoice Start Date?"),
// 		NewQuestion("Invoice End Date?"),
// 	}
// 	m := New(questions)


// 	f, err := tea.LogToFile("debug.log", "DEBUG")
	
// 	if err != nil {
// 		log.Fatal(err)
// 	}
// 	//defer f.Close()
// 	p := tea.NewProgram(m, tea.WithAltScreen())
// 	_, err = p.Run()
// 	if err != nil {
// 		log.Fatal(err)
// 	}
// 	// for i := range questions{
// 	// 	fmt.Println(m.questions[i].answer)
// 	// }
// 	defer f.Close()
// 	invoice := Invoice{}
// 	invoice.Name = m.questions[0].answer
// 	invoice.InvoiceNumber = m.questions[1].answer
// 	invoice.TotalHours = m.questions[2].answer
// 	invoice.StartDate = m.questions[3].answer
// 	invoice.EndDate = m.questions[4].answer

// 	return invoice
// }

// //GetData ... get data from cli
// // func GetData() Invoice {
// // 	//logger := logging.SetLogger("myui")
// // 	logging.Logger.Debug("Package myui")
// // 	var firstName string
// // 	huh.NewInput().
// //     			Title("Enter your first name: ").
// //     			Prompt("> ").
// //     			Validate(func (str string ) error {
// // 					if len(firstName) <= 2 {
// // 						return errors.New("first name too short")
// // 					}
// // 					return nil
// // 				}).
// //     			Value(&firstName).
// // 				Run()
// // 	inv := Invoice{Name:firstName,HourlyRate: 20, TotalHours: 23, InvoiceNumber: "HS2401"}
		
// // 	return inv
// // }
